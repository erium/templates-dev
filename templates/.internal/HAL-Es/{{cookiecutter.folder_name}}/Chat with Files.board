{"version":"2.4","nodes":[{"id":"781dfe1b-8320-49ce-b528-a42bf1db5b77","type":"note","position":{"x":190,"y":200},"size":{"width":520,"height":320},"type_specific":{"message":"","title":"User uploaded files","color":"note-color-3","auto_size":true,"attachments":{}}},{"id":"493cfb12-e74b-4886-a2f2-3cd7111d101d","type":"setup","position":{"x":30,"y":670},"size":{"width":510,"height":540},"type_specific":{"bot_type":"chat-gpt-41","setup_args":{"system_setup":"Answer questions with respect to documents/files that the user provides.\n\nYou have access to four functions to locate and understand the files:\n\n- **List directory** and **search file**: Use these functions often to locate the file(s) the user might be referring to. When in doubt, use them on the path \".\".\n- **Semantic search**: Use this function once it is clear what file(s) the user is referring to. You can use it on whole directories (search multiple files at once) or on specific files. If the number of files the user refers to is small, use this function as soon as possible even if the user's question is not clear yet. In that case, leave all arguments apart from the path empty to retrieve the first 5 pages of the file. Then offer the user possible questions that you could answer.\n- **Look at page**: Use this function to understand more details about pages that you found with the semantic search. For example, a PDF page might contain tabular data that you found with the semantic search. Then use this vision function to understand the page better before answering the user's question. When answering questions about slides, always use this function after the semantic search to improve your information basis.\n\n# Steps\n\n1. **Locate Files**:\n   - Use `list_dir` to list the contents of the directory if the user does not specify the file location.\n   - Use `search_file` to search for specific files based on extension or substring if the user provides partial information.\n\n2. **Semantic Search**:\n   - Use `semantic_search` on the identified files or directories to retrieve relevant pages/content based on the user's query.\n   - If the user's question is unclear, use semantic search with minimal parameters to retrieve the first 5 pages and offer possible questions.\n\n3. **Detailed Page Analysis**:\n   - Use `look_at_page` multiple times to examine specific pages found through semantic search for detailed information, especially for tabular data or slides.\n\n4. **Answer User's Question**:\n   - Based on the information gathered, provide a detailed and accurate answer to the user's question.\n\n# Output Format\n\n- Provide the answer in a clear and concise paragraph format.\n- If the answer includes structured data (e.g., tabular data), format it appropriately using markdown tables.\n\n# Examples\n\n**Example 1:**\n\n**User Input:**\n\"Can you find the sales data for Q1 in the provided documents?\"\n\n**Steps:**\n1. Use `list_dir` to list the contents of the directory.\n2. Use `search_file` to locate files with \"sales\" in the name.\n3. Use `semantic_search` on the identified files to find relevant pages containing \"Q1 sales data\".\n4. Use `look_at_page` multiple times to examine the pages with sales data.\n5. Provide the answer in paragraph format.\n\n**Example 2:**\n\n**User Input:**\n\"Show me the summary slide from the presentation.\"\n\n**Steps:**\n1. Use `list_dir` to list the contents of the directory.\n2. Use `search_file` to locate presentation files (e.g., .pptx).\n3. Use `semantic_search` on the identified presentation file to find the summary slide.\n4. Use `look_at_page` to examine the summary slide.\n5. Provide the answer in paragraph format.\n\n# Notes\n\n- Always verify the file path and type before performing searches.\n- For ambiguous user queries, retrieve initial pages and offer possible questions to clarify.\n- Ensure detailed page analysis for slides and tabular data for accurate answers.\n","default_functions":[],"runner_functions":[{"endpoint":"/custom/list_dir","function":{"name":"list_dir","description":"List the contents of a directory.\n\nReturns a list of dictionaries containing file information (path, is_dir, description).","parameters":{"type":"object","properties":{},"required":[]}},"group":"Read Files Functions","pretty_name":"List Directory","manifestId":"_Global_Read Files Functions"},{"endpoint":"/custom/search_file","function":{"name":"search_file","description":"Search for files in the file system.\n\nReturns list of matching file paths.","parameters":{"type":"object","properties":{"path":{"type":"string","description":"Directory path to search within."},"extension":{"type":"string","description":"File extension to search for (e.g., \".pdf\")."},"substring":{"type":"string","description":"Substring to search for in file names."},"typo_tolerance":{"type":"boolean","description":"Whether to include typo tolerance in the substring search."}},"required":["path"]}},"group":"Read Files Functions","pretty_name":"Search file","manifestId":"_Global_Read Files Functions"},{"endpoint":"/custom/semantic_search","function":{"name":"semantic_search","description":"Perform a semantic search on the specified path searching all supported files therein.\n\nReturns a list of search results, which includes textual contents and sources (file paths).","parameters":{"type":"object","properties":{"path":{"type":"string","description":"The file or directory path to search within."},"query":{"type":"string","description":"The search query."},"example_text":{"type":"string","description":"Example text to improve search relevance."},"keywords":{"type":"string","description":"Keywords to improve search relevance."},"max_results":{"type":"number","description":"Maximum number of search results to return. The default is 5."}},"required":["path"]}},"group":"Read Files Functions","pretty_name":"Semantic Search","manifestId":"_Global_Read Files Functions"},{"endpoint":"/custom/look_at_page","function":{"name":"look_at_page","description":"Returns a page of a .pdf, .docx, .doc, .pptx, or .ppt file as text and image for the bot to look at.","parameters":{"type":"object","properties":{"path":{"type":"string","description":"The file path"},"page":{"type":"number","description":"The page number (same as in the metadata of semantic_search results)"}},"required":["path","page"]}},"group":"Read Files Functions","pretty_name":"Look at page","manifestId":"_Global_Read Files Functions"},{"endpoint":"/execute_kernel_code","function":{"name":"code_interpreter","description":"Executes code in a running IPython kernel. You get as result the STDOUT.\n  Hence, include a print or display command.\n  The code will be executed in the same directory as the board on which you are defined\n  This directory is either \"/home/jovyan/\" or some sub(-sub)folder within.'\n  Recall: You MUST set a valid JSON with at least the code key in the arguments!","parameters":{"type":"object","properties":{"code":{"type":"string","description":"The python code that should be run in the IPython Jupyter Kernel (e.g.: a = np.array([1,2,3,4]"}},"required":["code"]}},"pretty_name":"Code Interpreter (NANO)","manifestId":"_Global_NANO"}],"knows_platform":true,"knows_user":true},"auto_size":false}},{"id":"3ececb0b-09e9-4cd5-80af-14705d5468f6","type":"bot","position":{"x":620,"y":670},"size":{"width":520,"height":320},"type_specific":{"prompt_input":"","prompt_output":"","state":"initial","split_size":[19.7,80.3],"auto_size":false,"attachments":{}}}],"edges":[{"id":"164e25f4-afcd-4c48-9e6d-99613f30b0f7","type":"prompt_line","connections":{"source":{"id":"493cfb12-e74b-4886-a2f2-3cd7111d101d","connector":"prompt-output"},"target":{"id":"3ececb0b-09e9-4cd5-80af-14705d5468f6","connector":"prompt-input"}},"type_specific":{}},{"id":"e4c494a8-d331-4d13-89ff-70a403f3292a","type":"solid_arrow","connections":{"source":{"id":"781dfe1b-8320-49ce-b528-a42bf1db5b77","connector":"note-bottom"},"target":{"id":"3ececb0b-09e9-4cd5-80af-14705d5468f6","connector":"context-input"}},"type_specific":{}}],"workflows":[{"id":"37014b50-4e84-4f76-a8fc-dc694236c320","name":"default","linkedNodeId":"3ececb0b-09e9-4cd5-80af-14705d5468f6","chatText":"","linearTasks":[{"id":"c486a1d2-8cb1-4ae6-9035-7b6f2aea61aa","type":"upload","type_specific":{"actions":[],"uploadLabel":"Upload files","uploadDirectory":".","filePathTargets":[{"targetId":"781dfe1b-8320-49ce-b528-a42bf1db5b77","targetType":"card"}],"fileContentTargets":[],"chunkingArguments":[]}}]}]}